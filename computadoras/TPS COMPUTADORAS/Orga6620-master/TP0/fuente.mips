.file	1 "poder.c"
	.section .mdebug.abi32
	.previous
	.abicalls
	.text
	.align	2
	.globl	leerLinea
	.ent	leerLinea
leerLinea:
	.frame	$fp,64,$ra		# vars= 24, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$t9
	.set	reorder
	subu	$sp,$sp,64
	.cprestore 16
	sw	$ra,56($sp)
	sw	$fp,52($sp)
	sw	$gp,48($sp)
	move	$fp,$sp
	sw	$a0,64($fp)
	li	$v0,40			# 0x28
	sw	$v0,24($fp)
	sw	$zero,28($fp)
	lw	$a0,24($fp)
	la	$t9,malloc
	jal	$ra,$t9
	sw	$v0,32($fp)
$L18:
	lw	$a0,64($fp)
	la	$t9,fgetc
	jal	$ra,$t9
	sb	$v0,36($fp)
	lw	$v1,32($fp)
	lw	$v0,28($fp)
	addu	$v1,$v1,$v0
	lbu	$v0,36($fp)
	sb	$v0,0($v1)
	lw	$v0,28($fp)
	addu	$v1,$v0,1
	lw	$v0,24($fp)
	bne	$v0,$v1,$L21
	lw	$v0,24($fp)
	addu	$v0,$v0,10
	sw	$v0,24($fp)
	lw	$a0,32($fp)
	lw	$a1,24($fp)
	la	$t9,realloc
	jal	$ra,$t9
	sw	$v0,40($fp)
	lw	$v0,40($fp)
	bne	$v0,$zero,$L22
	lw	$v1,32($fp)
	lw	$v0,28($fp)
	addu	$v0,$v1,$v0
	sb	$zero,0($v0)
	lw	$v0,32($fp)
	sw	$v0,44($fp)
	b	$L17
$L22:
	lw	$v0,40($fp)
	sw	$v0,32($fp)
$L21:
	lw	$v0,28($fp)
	addu	$v0,$v0,1
	sw	$v0,28($fp)
	lb	$v1,36($fp)
	li	$v0,10			# 0xa
	beq	$v1,$v0,$L19
	lb	$v1,36($fp)
	li	$v0,-1			# 0xffffffffffffffff
	bne	$v1,$v0,$L18
$L19:
	lw	$v1,32($fp)
	lw	$v0,28($fp)
	addu	$v0,$v1,$v0
	addu	$v0,$v0,-1
	sb	$zero,0($v0)
	lw	$v1,28($fp)
	li	$v0,1			# 0x1
	bne	$v1,$v0,$L26
	lw	$a0,32($fp)
	la	$t9,free
	jal	$ra,$t9
	sw	$zero,44($fp)
	b	$L17
$L26:
	lw	$v0,32($fp)
	sw	$v0,44($fp)
$L17:
	lw	$v0,44($fp)
	move	$sp,$fp
	lw	$ra,56($sp)
	lw	$fp,52($sp)
	addu	$sp,$sp,64
	j	$ra
	.end	leerLinea
	.size	leerLinea, .-leerLinea
	.align	2
	.globl	invertirLinea
	.ent	invertirLinea
invertirLinea:
	.frame	$fp,56,$ra		# vars= 16, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$t9
	.set	reorder
	subu	$sp,$sp,56
	.cprestore 16
	sw	$ra,48($sp)
	sw	$fp,44($sp)
	sw	$gp,40($sp)
	move	$fp,$sp
	sw	$a0,56($fp)
	lw	$v0,56($fp)
	bne	$v0,$zero,$L28
	b	$L27
$L28:
	lw	$a0,56($fp)
	la	$t9,strlen
	jal	$ra,$t9
	sw	$v0,24($fp)
	sw	$zero,28($fp)
	lw	$v0,24($fp)
	addu	$v0,$v0,-1
	sw	$v0,32($fp)
$L29:
	lw	$v0,32($fp)
	lw	$v1,28($fp)
	slt	$v0,$v1,$v0
	bne	$v0,$zero,$L31
	b	$L27
$L31:
	lw	$v1,56($fp)
	lw	$v0,28($fp)
	addu	$v0,$v1,$v0
	lbu	$v0,0($v0)
	sb	$v0,36($fp)
	lw	$v1,56($fp)
	lw	$v0,28($fp)
	addu	$a0,$v1,$v0
	lw	$v1,56($fp)
	lw	$v0,32($fp)
	addu	$v0,$v1,$v0
	lbu	$v0,0($v0)
	sb	$v0,0($a0)
	lw	$v1,56($fp)
	lw	$v0,32($fp)
	addu	$v1,$v1,$v0
	lbu	$v0,36($fp)
	sb	$v0,0($v1)
	lw	$v0,28($fp)
	addu	$v0,$v0,1
	sw	$v0,28($fp)
	lw	$v0,32($fp)
	addu	$v0,$v0,-1
	sw	$v0,32($fp)
	b	$L29
$L27:
	move	$sp,$fp
	lw	$ra,48($sp)
	lw	$fp,44($sp)
	addu	$sp,$sp,56
	j	$ra
	.end	invertirLinea
	.size	invertirLinea, .-invertirLinea
	.rdata
	.align	2
$LC0:
	.ascii	"-h\000"
	.align	2
$LC1:
	.ascii	"Usage:\n"
	.ascii	"tp0 -h\n"
	.ascii	"tp0 -V\n"
	.ascii	"tp0 [file...]\n"
	.ascii	"Options:\n"
	.ascii	"-V, --version  Print version and quit.\n"
	.ascii	"-h, --help  Print this information and quit.\n"
	.ascii	"Examples:\n"
	.ascii	"tp0 foo.txt bar.txt\n"
	.ascii	"tp0 gz.txt\n\000"
	.align	2
$LC2:
	.ascii	"-V\000"
	.align	2
$LC3:
	.ascii	"Tp0 Version 1.0\000"
	.align	2
$LC4:
	.ascii	"r\000"
	.align	2
$LC5:
	.ascii	"File %s not found\n\000"
	.align	2
$LC6:
	.ascii	"%s\n\000"
	.text
	.align	2
	.globl	main
	.ent	main
main:
	.frame	$fp,64,$ra		# vars= 24, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$t9
	.set	reorder
	subu	$sp,$sp,64
	.cprestore 16
	sw	$ra,56($sp)
	sw	$fp,52($sp)
	sw	$gp,48($sp)
	move	$fp,$sp
	sw	$a0,64($fp)
	sw	$a1,68($fp)
	lw	$v0,64($fp)
	addu	$v0,$v0,-1
	sw	$v0,24($fp)
	sb	$zero,32($fp)
	lw	$v0,24($fp)
	bne	$v0,$zero,$L33
	la	$v0,__sF
	sw	$v0,28($fp)
	li	$v0,1			# 0x1
	sw	$v0,24($fp)
	li	$v0,1			# 0x1
	sb	$v0,32($fp)
	b	$L34
$L33:
	lw	$v0,68($fp)
	addu	$v0,$v0,4
	lw	$a0,0($v0)
	la	$a1,$LC0
	la	$t9,strcmp
	jal	$ra,$t9
	bne	$v0,$zero,$L35
	lw	$v1,24($fp)
	li	$v0,1			# 0x1
	bne	$v1,$v0,$L35
	la	$a0,$LC1
	la	$t9,printf
	jal	$ra,$t9
	sw	$zero,44($fp)
	b	$L32
$L35:
	lw	$v0,68($fp)
	addu	$v0,$v0,4
	lw	$a0,0($v0)
	la	$a1,$LC2
	la	$t9,strcmp
	jal	$ra,$t9
	bne	$v0,$zero,$L34
	lw	$v1,24($fp)
	li	$v0,1			# 0x1
	bne	$v1,$v0,$L34
	la	$a0,$LC3
	la	$t9,printf
	jal	$ra,$t9
	sw	$zero,44($fp)
	b	$L32
$L34:
	sw	$zero,36($fp)
$L38:
	lw	$v0,36($fp)
	lw	$v1,24($fp)
	slt	$v0,$v0,$v1
	bne	$v0,$zero,$L40
	b	$L39
$L40:
	lbu	$v0,32($fp)
	bne	$v0,$zero,$L41
	lw	$v0,36($fp)
	sll	$v1,$v0,2
	lw	$v0,68($fp)
	addu	$v0,$v1,$v0
	addu	$v0,$v0,4
	lw	$a0,0($v0)
	la	$a1,$LC4
	la	$t9,fopen
	jal	$ra,$t9
	sw	$v0,28($fp)
$L41:
	lw	$v0,28($fp)
	bne	$v0,$zero,$L44
	lw	$v0,36($fp)
	sll	$v1,$v0,2
	lw	$v0,68($fp)
	addu	$v0,$v1,$v0
	addu	$v0,$v0,4
	la	$a0,__sF+176
	la	$a1,$LC5
	lw	$a2,0($v0)
	la	$t9,fprintf
	jal	$ra,$t9
	b	$L43
$L44:
	lw	$v0,28($fp)
	lhu	$v0,12($v0)
	srl	$v0,$v0,5
	andi	$v0,$v0,0x1
	beq	$v0,$zero,$L46
	b	$L43
$L46:
	lw	$a0,28($fp)
	la	$t9,leerLinea
	jal	$ra,$t9
	sw	$v0,40($fp)
	lw	$a0,40($fp)
	la	$t9,invertirLinea
	jal	$ra,$t9
	lw	$v0,40($fp)
	beq	$v0,$zero,$L44
	la	$a0,$LC6
	lw	$a1,40($fp)
	la	$t9,printf
	jal	$ra,$t9
	lw	$a0,40($fp)
	la	$t9,free
	jal	$ra,$t9
	b	$L44
$L43:
	lw	$v0,36($fp)
	addu	$v0,$v0,1
	sw	$v0,36($fp)
	lbu	$v0,32($fp)
	bne	$v0,$zero,$L38
	lw	$v0,28($fp)
	beq	$v0,$zero,$L38
	lw	$a0,28($fp)
	la	$t9,fclose
	jal	$ra,$t9
	b	$L38
$L39:
	sw	$zero,44($fp)
$L32:
	lw	$v0,44($fp)
	move	$sp,$fp
	lw	$ra,56($sp)
	lw	$fp,52($sp)
	addu	$sp,$sp,64
	j	$ra
	.end	main
	.size	main, .-main
	.ident	"GCC: (GNU) 3.3.3 (NetBSD nb3 20040520)"
